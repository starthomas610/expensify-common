{
    "extends": "airbnb",

    "env": {
        "browser": true,
        "node": true,
        "jquery": true,
        "es6": true
    },

    "rules": {
        "camelcase": 0,
        "comma-dangle": 0,
        "consistent-return": 0,
        "consistent-this": [1, "self"],
        "func-names": 0,
        "global-require": 0,
        "import/no-dynamic-require": 0,
        "import/no-extraneous-dependencies": 0,
        "import/no-unresolved": 0,
        // Enforce indentation of 4 spaces
        "indent": [2, 4],
        "max-len": [1, {
            "code": 120
        }],
        "no-alert": 0,
        "no-return-assign": 0,
        "no-plusplus": 0,
        "object-curly-spacing": [2, "never"],
        "prefer-template": 1,
        // Require space before function opening parenthesis
        "space-before-function-paren": [2, {
            "anonymous": "always",
            "named": "never"
        }],
        "strict": [0],
        "valid-jsdoc": [2, {
            "requireParamDescription": false,
            "requireReturnDescription": false,
            "requireReturn": false
        }],
        // This enforces wrapping always the function expression.
        "wrap-iife": [2, "inside"],

        // eslint-plugin-react
        //
        // React specific rules for ESLint.
        //
        // Do not prevent multiple component definition per file
        "react/no-multi-comp": 0,
        // Do not prevent missing React when using JSX
        "react/react-in-jsx-scope": 0,
        // Allow .js files to use jsx
        "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
        "react/jsx-indent-props": [2, 4],
        "react/jsx-indent": [2, 4],
        "react/prefer-es6-class": 1,
        "react/prefer-stateless-function": 1,
        "react/prop-types": 1,
        // findDOMNode() will be an error, use refs instead
        "react/no-find-dom-node": 1,
        // This will only be a warning, to promote us to write better propTypes
        "react/forbid-prop-types": 1,
        // This is also a warning as its a best practice to not use strings, but its not being deprecated either
        "react/no-string-refs": 1,

        // Turn this off entirely because we like to click on things like <h3>s
        "jsx-a11y/no-static-element-interactions": 0,

        // Expensify legacy rules
        //
        // The following rules are actually supposed to be errors but we decided to
        // switch them to warnings to not invalidate our current codebase. We should
        // still try to get rid of these modifications at some point and turn them
        // back in to errors.
        //
        "new-cap": [1, {"newIsCap": true}],
        "no-mixed-operators": [1, {
            "groups": [
                ['+', '-', '*', '/', '%', '**'],
                ['&', '|', '^', '~', '<<', '>>', '>>>'],
                ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
                ['&&', '||'],
                ['in', 'instanceof']
            ],
            "allowSamePrecedence": false
        }],
        "no-param-reassign": 1,
        "no-underscore-dangle": 1,
        "no-unused-vars": 1,
        "no-var": 1,
        "jsx-a11y/label-has-for": 1
    },

    "ecmaFeatures": {
        "generators": true,
        "objectLiteralDuplicateProperties": true,
        "experimentalObjectRestSpread": true
    }
}
